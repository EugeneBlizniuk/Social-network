{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/Contacts/Contacts.jsx","components/Profile/ProfileInfo/JobDescription/JobDescription.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/selector/profileSelector.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","status","updateStatus","useState","editMode","setEditMode","localStatus","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","value","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contactStyle","contact","Contact","contactTitle","contactValue","Contacts","JobDescription","lookingForAJob","lookingForAJobDescription","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","ProfileInfo","savePhoto","saveProfileData","Preloader","descriptionBlock","src","photos","large","userPhoto","avatar","target","files","length","initialValues","formData","then","Post","message","likeCount","item","AddNewPostReduxForm","Field","name","component","placeholder","MyPosts","postMessages","addPost","posts","p","postsBlock","values","newPostMessage","MyPostsContainer","connect","state","newPostTextField","profilePage","dispatch","postMessage","action","addPostActionCreator","Profile","props","selectProfile","selectStatus","selectAuthorizedUserId","auth","id","selectIsAuthenticated","isAuthenticated","ProfileContainer","userId","this","match","params","autherizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","React","Component","compose","withRouter"],"mappings":"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","file":"static/js/3.68a542f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1cqVc\",\"avatar\":\"ProfileInfo_avatar__2mSnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2ixmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3eTdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1jXdT\"};","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatus = ({ status, updateStatus }) => {\n    let [editMode, setEditMode] = useState(false);\n    let [localStatus, setStatus] = useState(status);\n\n    useEffect( () => {\n        setStatus(status);\n    }, [status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        updateStatus(localStatus);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{status || 'no status' }</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\n                        value={localStatus}></input>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport style from '../../common/FormControls/FormControls.module.css';\r\nimport contactStyle from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error && <div className={style.formSummaryError}> {error} </div>}\r\n            <div>\r\n                <b>Full name:</b>\r\n                {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Do I need a job?:</b>\r\n                {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n            </div>\r\n            <div>\r\n                <b>Job description:</b>\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b>\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={contactStyle.contact}>\r\n                        <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({ form: 'editProfileDataForm' })(ProfileDataForm);","import React from 'react';\r\n\r\nconst Contacts = ({ contacts }) => {\r\n    return (\r\n        <div>\r\n            <b>Contacts</b>:\r\n            {\r\n                Object.keys(contacts)\r\n                    .map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={contacts[key]} />\r\n                    })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\n\r\nconst JobDescription = ({ lookingForAJob, lookingForAJobDescription }) => {\r\n    return <div>\r\n        <div>\r\n            <b>Do I need a job?:</b> {lookingForAJob ? 'Yep' : 'Nope' }\r\n        </div>\r\n        <div>\r\n            <b>Job description:</b> {lookingForAJobDescription}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default JobDescription;","import React from 'react';\r\nimport Contacts from './Contacts/Contacts';\r\nimport JobDescription from './JobDescription/JobDescription';\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n            <div><b>Full name:</b> {profile.fullName} </div>\r\n            <Contacts contacts={profile.contacts} />\r\n            <JobDescription\r\n                lookingForAJob={profile.lookingForAJob}\r\n                lookingForAJobDescription={profile.lookingForAJobDescription} />\r\n            <div>\r\n                <b>About me:</b>\r\n                {profile.aboutMe}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileData;","import React from 'react';\n\nimport style from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport userPhoto from '../../../assets/images/user.png';\nimport { useState } from 'react';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileData from './ProfileData';\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfileData }) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader />\n    }\n\n    const onAvatarChosen = (e) => {\n        if (e.target.files.length > 0) {\n            const avatar = e.target.files[0];\n            savePhoto(avatar);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfileData(formData)\n        .then(\n            () => { setEditMode(false) }\n        );\n    }\n\n    return (\n        <div>\n            <div className={style.descriptionBlock}>\n                <img src={profile.photos.large || userPhoto} className={style.avatar} />\n                {isOwner &&\n                    <div> <input type={'file'} onChange={onAvatarChosen} /> </div>\n                }\n                {\n                    editMode\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n                        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />\n                }\n                <ProfileStatus status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport style from './Post.module.css';\n\nconst Post = ({ message, likeCount }) => {\n  return (\n    <div className={style.item}>\n      <img src=\"https://vokrug-tv.ru/pic/news/5/f/c/2/rsz300x300_5fc2879465129c11d65749ab9e3db7cc.jpg\" />\n      {message}\n      <div>\n        <span>like {likeCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from 'redux-form';\n\nimport style from './MyPosts.module.css';\n\nimport Post from './Post/Post';\n\nconst AddNewPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field name='newPostMessage' component='textarea' placeholder='Something new happened?'/>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n}\n\nconst AddNewPostReduxForm = reduxForm({ form: 'addNewPostForm' })(AddNewPostForm);\n\nconst MyPosts = ({ postMessages, addPost }) => {\n  let posts = postMessages.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n\n  const onAddedPost = (values) => {\n    addPost(values.newPostMessage);\n  }\n\n  return (\n    <div className={style.postsBlock}>\n      My posts\n      <div>New posts</div>\n      <AddNewPostReduxForm onSubmit={onAddedPost} />\n      <div>\n        {posts}\n      </div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import { addPostActionCreator } from '../../../redux/reducer/profileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        newPostTextField: state.profilePage.newPostTextField,\n        postMessages: state.profilePage.postMessages\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (postMessage) => {\n            const action = addPostActionCreator(postMessage);\n            dispatch(action);\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from \"react\";\n\nimport style from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div className={style.profile}>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        savePhoto={props.savePhoto}\n        isOwner={props.isOwner} \n        saveProfileData={props.saveProfileData}\n        />\n      <MyPostsContainer />\n    </div >\n  );\n};\n\nexport default Profile;\n","export const selectProfile = (state) => {\n    return state.profilePage.profile;\n}\n\nexport const selectStatus = (state) => {\n    return state.profilePage.status;\n}\n\nexport const selectAuthorizedUserId = (state) => {\n    return state.auth.id;\n}\n\nexport const selectIsAuthenticated = (state) => {\n    return state.auth.isAuthenticated;\n}","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfileData\n} from '../../redux/reducer/profileReducer';\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport {\n    selectProfile,\n    selectStatus,\n    selectAuthorizedUserId,\n    selectIsAuthenticated\n} from \"../../redux/selector/profileSelector\";\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.autherizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return <Profile\n            {...this.props}\n            profile={this.props.profile}\n            status={this.props.status}\n            updateStatus={this.props.updateStatus}\n            isOwner={!this.props.match.params.userId}\n            savePhoto={this.props.savePhoto}\n            saveProfileData={this.props.saveProfileData}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: selectProfile(state),\n    status: selectStatus(state),\n    autherizedUserId: selectAuthorizedUserId(state),\n    isAuthenticated: selectIsAuthenticated(state)\n});\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfileData }),\n    withRouter\n)(ProfileContainer);"],"sourceRoot":""}